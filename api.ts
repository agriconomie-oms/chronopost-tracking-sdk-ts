/* tslint:disable */
/* eslint-disable */
/**
 * Swagger Okapi Suivi
 * This is swagger of Suivi V2 used for transaction around tracking and account La Poste.
 *
 * The version of the OpenAPI document: 5.4.0
 * Contact: product.ssu@laposte.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Configuration } from './configuration';
import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';

/**
 * 
 * @export
 * @interface BaseResponse
 */
export interface BaseResponse {
    /**
     * Returned value gaving treatment result
     * @type {number}
     * @memberof BaseResponse
     */
    'returnCode': BaseResponseReturnCodeEnum;
    /**
     * Language of the returned response
     * @type {string}
     * @memberof BaseResponse
     */
    'lang'?: BaseResponseLangEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum BaseResponseReturnCodeEnum {
    NUMBER_101 = 101,
    NUMBER_104 = 104,
    NUMBER_105 = 105,
    NUMBER_200 = 200,
    NUMBER_206 = 206,
    NUMBER_400 = 400,
    NUMBER_404 = 404,
    NUMBER_504 = 504
}
/**
    * @export
    * @enum {string}
    */
export enum BaseResponseLangEnum {
    FrFr = 'fr_FR',
    EnGb = 'en_GB',
    DeDe = 'de_DE',
    ItIt = 'it_IT',
    EsEs = 'es_ES',
    NlNl = 'nl_NL'
}

/**
 * Contextual Informations on call and object
 * @export
 * @interface ContextData
 */
export interface ContextData {
    /**
     * 
     * @type {DeliveryChoice}
     * @memberof ContextData
     */
    'deliveryChoice'?: DeliveryChoice;
    /**
     * 
     * @type {RemovalPoint}
     * @memberof ContextData
     */
    'removalPoint'?: RemovalPoint;
    /**
     * Origin country\'s code.
     * @type {string}
     * @memberof ContextData
     */
    'originCountry'?: string;
    /**
     * Delivery country\'s code.
     * @type {string}
     * @memberof ContextData
     */
    'arrivalCountry'?: string;
    /**
     * Partner\'s code.
     * @type {string}
     * @memberof ContextData
     */
    'partner'?: string;
}
/**
 * List of delivery services possible or chosen
 * @export
 * @interface DeliveryChoice
 */
export interface DeliveryChoice {
    /**
     * 0=No, 1=Possible, 2=Chosen.
     * @type {number}
     * @memberof DeliveryChoice
     */
    'deliveryChoice': number;
}
/**
 * Product object returned
 * @export
 * @interface Product
 */
export interface Product {
    /**
     * Object\'s identifier composed from 11 to 15 alphanumeric characters.
     * @type {string}
     * @memberof Product
     */
    'idShip': string;
    /**
     * Product\'s name or category.
     * @type {string}
     * @memberof Product
     */
    'product': string;
    /**
     * Holder in charge :  1=Courrier,  3=Chronopost,  4=Colissimo.
     * @type {number}
     * @memberof Product
     */
    'holder': ProductHolderEnum;
    /**
     * Name of holder in charge.
     * @type {string}
     * @memberof Product
     */
    'holderName'?: ProductHolderNameEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum ProductHolderEnum {
    NUMBER_1 = 1,
    NUMBER_3 = 3,
    NUMBER_4 = 4
}
/**
    * @export
    * @enum {string}
    */
export enum ProductHolderNameEnum {
    Courrier = 'Courrier',
    Chronopost = 'Chronopost',
    Colissimo = 'Colissimo'
}

/**
 * Description of removal point
 * @export
 * @interface RemovalPoint
 */
export interface RemovalPoint {
    /**
     * Name of removal point.
     * @type {string}
     * @memberof RemovalPoint
     */
    'name': string;
    /**
     * Kind of point (\'BDP\', \'A2P\' ...).
     * @type {string}
     * @memberof RemovalPoint
     */
    'type': string;
}
/**
 * Json oject returned in case of problem or of invalid object
 * @export
 * @interface ResponseKO
 */
export interface ResponseKO {
    /**
     * 
     * @type {any}
     * @memberof ResponseKO
     */
    'returnCode': any;
    /**
     * Language of the returned response
     * @type {string}
     * @memberof ResponseKO
     */
    'lang'?: ResponseKOLangEnum;
    /**
     * Error message to be shown to customer
     * @type {string}
     * @memberof ResponseKO
     */
    'returnMessage'?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ResponseKOLangEnum {
    FrFr = 'fr_FR',
    EnGb = 'en_GB',
    DeDe = 'de_DE',
    ItIt = 'it_IT',
    EsEs = 'es_ES',
    NlNl = 'nl_NL'
}

/**
 * 
 * @export
 * @interface ResponseKOAllOf
 */
export interface ResponseKOAllOf {
    /**
     * 
     * @type {any}
     * @memberof ResponseKOAllOf
     */
    'returnCode'?: any;
    /**
     * Error message to be shown to customer
     * @type {string}
     * @memberof ResponseKOAllOf
     */
    'returnMessage'?: string;
}
/**
 * Json response returned in case of known and valid object
 * @export
 * @interface ResponseSU
 */
export interface ResponseSU {
    /**
     * 
     * @type {any}
     * @memberof ResponseSU
     */
    'returnCode': any;
    /**
     * Language of the returned response
     * @type {string}
     * @memberof ResponseSU
     */
    'lang'?: ResponseSULangEnum;
    /**
     * 
     * @type {Shipment}
     * @memberof ResponseSU
     */
    'shipment'?: Shipment;
}

/**
    * @export
    * @enum {string}
    */
export enum ResponseSULangEnum {
    FrFr = 'fr_FR',
    EnGb = 'en_GB',
    DeDe = 'de_DE',
    ItIt = 'it_IT',
    EsEs = 'es_ES',
    NlNl = 'nl_NL'
}

/**
 * 
 * @export
 * @interface ResponseSUAllOf
 */
export interface ResponseSUAllOf {
    /**
     * 
     * @type {any}
     * @memberof ResponseSUAllOf
     */
    'returnCode'?: any;
    /**
     * 
     * @type {Shipment}
     * @memberof ResponseSUAllOf
     */
    'shipment'?: Shipment;
}
/**
 * For each requested object, either a responseSU or a responseKO is returned
 * @export
 * @interface ResponseSUM
 */
export interface ResponseSUM {
    /**
     * 
     * @type {any}
     * @memberof ResponseSUM
     */
    'returnCode': any;
    /**
     * Language of the returned response
     * @type {string}
     * @memberof ResponseSUM
     */
    'lang'?: ResponseSUMLangEnum;
    /**
     * 
     * @type {Shipment}
     * @memberof ResponseSUM
     */
    'shipment'?: Shipment;
    /**
     * Error message to be shown to customer
     * @type {string}
     * @memberof ResponseSUM
     */
    'returnMessage'?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ResponseSUMLangEnum {
    FrFr = 'fr_FR',
    EnGb = 'en_GB',
    DeDe = 'de_DE',
    ItIt = 'it_IT',
    EsEs = 'es_ES',
    NlNl = 'nl_NL'
}

/**
 * Unified tracking object returned
 * @export
 * @interface Shipment
 */
export interface Shipment {
    /**
     * Object\'s identifier composed from 11 to 15 alphanumeric characters.
     * @type {string}
     * @memberof Shipment
     */
    'idShip': ShipmentIdShipEnum;
    /**
     * Product\'s name or category.
     * @type {string}
     * @memberof Shipment
     */
    'product': string;
    /**
     * Holder in charge :  1=Courrier,  3=Chronopost,  4=Colissimo.
     * @type {number}
     * @memberof Shipment
     */
    'holder': ShipmentHolderEnum;
    /**
     * Url to fine tracking.
     * @type {string}
     * @memberof Shipment
     */
    'urlDetail'?: string;
    /**
     * Url of tracking onto laposte.fr = $url+idship
     * @type {string}
     * @memberof Shipment
     */
    'url'?: string;
    /**
     * Date of entry into network, format aaaa-mm-jjThh:mn:ss+hh:mn.
     * @type {string}
     * @memberof Shipment
     */
    'entryDate'?: string;
    /**
     * Is object delivered?
     * @type {boolean}
     * @memberof Shipment
     */
    'isFinal': boolean;
    /**
     * Date of delivery, format aaaa-mm-jjThh:mn:ss+hh:mn.
     * @type {string}
     * @memberof Shipment
     */
    'deliveryDate'?: string;
    /**
     * 
     * @type {ContextData}
     * @memberof Shipment
     */
    'contextData'?: ContextData;
    /**
     * Definition of timeline : 5 items given
     * @type {Array<object>}
     * @memberof Shipment
     */
    'timeline'?: Array<object>;
    /**
     * List of event given into anti chronological order
     * @type {Array<object>}
     * @memberof Shipment
     */
    'event'?: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof Shipment
     */
    'message'?: Array<object>;
}

/**
    * @export
    * @enum {string}
    */
export enum ShipmentIdShipEnum {
    Exp = 'EXP',
    Dest = 'DEST'
}
/**
    * @export
    * @enum {string}
    */
export enum ShipmentHolderEnum {
    NUMBER_1 = 1,
    NUMBER_3 = 3,
    NUMBER_4 = 4
}


/**
 * SuiviApi - axios parameter creator
 * @export
 */
export const SuiviApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * All connected applications use this service to track. These calls represent nearly 95% of traffic
         * @summary Getting tracking informations for an object
         * @param {string} idship ID of object (1 to 10, comma separated)
         * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
         * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        get: async (idship: string, lang?: string, xForwardedFor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'idship' is not null or undefined
            assertParamExists('get', 'idship', idship)
            const localVarPath = `/idships/{idship}`
                .replace(`{${"idship"}}`, encodeURIComponent(String(idship)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication OKAPIkey required
            await setApiKeyToObject(localVarHeaderParameter, "X-Okapi-Key", configuration)

            if (lang !== undefined) {
                localVarQueryParameter['lang'] = lang;
            }

            if (xForwardedFor !== undefined && xForwardedFor !== null) {
                localVarHeaderParameter['X-Forwarded-For'] = String(xForwardedFor);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Used by browsers to verify allowed methods, domain origin ...
         * @summary Used by browsers to check request
         * @param {string} idship ID of object (1 to 10, comma separated)
         * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
         * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        options: async (idship: string, lang?: string, xForwardedFor?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'idship' is not null or undefined
            assertParamExists('options', 'idship', idship)
            const localVarPath = `/idships/{idship}`
                .replace(`{${"idship"}}`, encodeURIComponent(String(idship)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'OPTIONS', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication OKAPIkey required
            await setApiKeyToObject(localVarHeaderParameter, "X-Okapi-Key", configuration)

            if (lang !== undefined) {
                localVarQueryParameter['lang'] = lang;
            }

            if (xForwardedFor !== undefined && xForwardedFor !== null) {
                localVarHeaderParameter['X-Forwarded-For'] = String(xForwardedFor);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * SuiviApi - functional programming interface
 * @export
 */
export const SuiviApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = SuiviApiAxiosParamCreator(configuration)
    return {
        /**
         * All connected applications use this service to track. These calls represent nearly 95% of traffic
         * @summary Getting tracking informations for an object
         * @param {string} idship ID of object (1 to 10, comma separated)
         * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
         * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async get(idship: string, lang?: string, xForwardedFor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseSU>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.get(idship, lang, xForwardedFor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Used by browsers to verify allowed methods, domain origin ...
         * @summary Used by browsers to check request
         * @param {string} idship ID of object (1 to 10, comma separated)
         * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
         * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async options(idship: string, lang?: string, xForwardedFor?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.options(idship, lang, xForwardedFor, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * SuiviApi - factory interface
 * @export
 */
export const SuiviApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = SuiviApiFp(configuration)
    return {
        /**
         * All connected applications use this service to track. These calls represent nearly 95% of traffic
         * @summary Getting tracking informations for an object
         * @param {string} idship ID of object (1 to 10, comma separated)
         * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
         * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        get(idship: string, lang?: string, xForwardedFor?: string, options?: any): AxiosPromise<ResponseSU> {
            return localVarFp.get(idship, lang, xForwardedFor, options).then((request) => request(axios, basePath));
        },
        /**
         * Used by browsers to verify allowed methods, domain origin ...
         * @summary Used by browsers to check request
         * @param {string} idship ID of object (1 to 10, comma separated)
         * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
         * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        options(idship: string, lang?: string, xForwardedFor?: string, options?: any): AxiosPromise<void> {
            return localVarFp.options(idship, lang, xForwardedFor, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * SuiviApi - object-oriented interface
 * @export
 * @class SuiviApi
 * @extends {BaseAPI}
 */
export class SuiviApi extends BaseAPI {
    /**
     * All connected applications use this service to track. These calls represent nearly 95% of traffic
     * @summary Getting tracking informations for an object
     * @param {string} idship ID of object (1 to 10, comma separated)
     * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
     * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuiviApi
     */
    public get(idship: string, lang?: string, xForwardedFor?: string, options?: AxiosRequestConfig) {
        return SuiviApiFp(this.configuration).get(idship, lang, xForwardedFor, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Used by browsers to verify allowed methods, domain origin ...
     * @summary Used by browsers to check request
     * @param {string} idship ID of object (1 to 10, comma separated)
     * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
     * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuiviApi
     */
    public options(idship: string, lang?: string, xForwardedFor?: string, options?: AxiosRequestConfig) {
        return SuiviApiFp(this.configuration).options(idship, lang, xForwardedFor, options).then((request) => request(this.axios, this.basePath));
    }
}


