"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Swagger Okapi Suivi
 * This is swagger of Suivi V2 used for transaction around tracking and account La Poste.
 *
 * The version of the OpenAPI document: 5.4.0
 * Contact: product.ssu@laposte.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SuiviApi = exports.SuiviApiFactory = exports.SuiviApiFp = exports.SuiviApiAxiosParamCreator = exports.TimelineItemTypeEnum = exports.TimelineItemIdEnum = exports.ShipmentHolderEnum = exports.ShipmentIdShipEnum = exports.ResponseSUMLangEnum = exports.ResponseSULangEnum = exports.ResponseKOLangEnum = exports.ProductHolderNameEnum = exports.ProductHolderEnum = exports.BaseResponseLangEnum = exports.BaseResponseReturnCodeEnum = void 0;
const axios_1 = require("axios");
// Some imports not used depending on template conditions
// @ts-ignore
const common_1 = require("./common");
// @ts-ignore
const base_1 = require("./base");
/**
    * @export
    * @enum {string}
    */
var BaseResponseReturnCodeEnum;
(function (BaseResponseReturnCodeEnum) {
    BaseResponseReturnCodeEnum[BaseResponseReturnCodeEnum["NUMBER_101"] = 101] = "NUMBER_101";
    BaseResponseReturnCodeEnum[BaseResponseReturnCodeEnum["NUMBER_104"] = 104] = "NUMBER_104";
    BaseResponseReturnCodeEnum[BaseResponseReturnCodeEnum["NUMBER_105"] = 105] = "NUMBER_105";
    BaseResponseReturnCodeEnum[BaseResponseReturnCodeEnum["NUMBER_200"] = 200] = "NUMBER_200";
    BaseResponseReturnCodeEnum[BaseResponseReturnCodeEnum["NUMBER_206"] = 206] = "NUMBER_206";
    BaseResponseReturnCodeEnum[BaseResponseReturnCodeEnum["NUMBER_400"] = 400] = "NUMBER_400";
    BaseResponseReturnCodeEnum[BaseResponseReturnCodeEnum["NUMBER_404"] = 404] = "NUMBER_404";
    BaseResponseReturnCodeEnum[BaseResponseReturnCodeEnum["NUMBER_504"] = 504] = "NUMBER_504";
})(BaseResponseReturnCodeEnum = exports.BaseResponseReturnCodeEnum || (exports.BaseResponseReturnCodeEnum = {}));
/**
    * @export
    * @enum {string}
    */
var BaseResponseLangEnum;
(function (BaseResponseLangEnum) {
    BaseResponseLangEnum["FrFr"] = "fr_FR";
    BaseResponseLangEnum["EnGb"] = "en_GB";
    BaseResponseLangEnum["DeDe"] = "de_DE";
    BaseResponseLangEnum["ItIt"] = "it_IT";
    BaseResponseLangEnum["EsEs"] = "es_ES";
    BaseResponseLangEnum["NlNl"] = "nl_NL";
})(BaseResponseLangEnum = exports.BaseResponseLangEnum || (exports.BaseResponseLangEnum = {}));
/**
    * @export
    * @enum {string}
    */
var ProductHolderEnum;
(function (ProductHolderEnum) {
    ProductHolderEnum[ProductHolderEnum["NUMBER_1"] = 1] = "NUMBER_1";
    ProductHolderEnum[ProductHolderEnum["NUMBER_3"] = 3] = "NUMBER_3";
    ProductHolderEnum[ProductHolderEnum["NUMBER_4"] = 4] = "NUMBER_4";
})(ProductHolderEnum = exports.ProductHolderEnum || (exports.ProductHolderEnum = {}));
/**
    * @export
    * @enum {string}
    */
var ProductHolderNameEnum;
(function (ProductHolderNameEnum) {
    ProductHolderNameEnum["Courrier"] = "Courrier";
    ProductHolderNameEnum["Chronopost"] = "Chronopost";
    ProductHolderNameEnum["Colissimo"] = "Colissimo";
})(ProductHolderNameEnum = exports.ProductHolderNameEnum || (exports.ProductHolderNameEnum = {}));
/**
    * @export
    * @enum {string}
    */
var ResponseKOLangEnum;
(function (ResponseKOLangEnum) {
    ResponseKOLangEnum["FrFr"] = "fr_FR";
    ResponseKOLangEnum["EnGb"] = "en_GB";
    ResponseKOLangEnum["DeDe"] = "de_DE";
    ResponseKOLangEnum["ItIt"] = "it_IT";
    ResponseKOLangEnum["EsEs"] = "es_ES";
    ResponseKOLangEnum["NlNl"] = "nl_NL";
})(ResponseKOLangEnum = exports.ResponseKOLangEnum || (exports.ResponseKOLangEnum = {}));
/**
    * @export
    * @enum {string}
    */
var ResponseSULangEnum;
(function (ResponseSULangEnum) {
    ResponseSULangEnum["FrFr"] = "fr_FR";
    ResponseSULangEnum["EnGb"] = "en_GB";
    ResponseSULangEnum["DeDe"] = "de_DE";
    ResponseSULangEnum["ItIt"] = "it_IT";
    ResponseSULangEnum["EsEs"] = "es_ES";
    ResponseSULangEnum["NlNl"] = "nl_NL";
})(ResponseSULangEnum = exports.ResponseSULangEnum || (exports.ResponseSULangEnum = {}));
/**
    * @export
    * @enum {string}
    */
var ResponseSUMLangEnum;
(function (ResponseSUMLangEnum) {
    ResponseSUMLangEnum["FrFr"] = "fr_FR";
    ResponseSUMLangEnum["EnGb"] = "en_GB";
    ResponseSUMLangEnum["DeDe"] = "de_DE";
    ResponseSUMLangEnum["ItIt"] = "it_IT";
    ResponseSUMLangEnum["EsEs"] = "es_ES";
    ResponseSUMLangEnum["NlNl"] = "nl_NL";
})(ResponseSUMLangEnum = exports.ResponseSUMLangEnum || (exports.ResponseSUMLangEnum = {}));
/**
    * @export
    * @enum {string}
    */
var ShipmentIdShipEnum;
(function (ShipmentIdShipEnum) {
    ShipmentIdShipEnum["Exp"] = "EXP";
    ShipmentIdShipEnum["Dest"] = "DEST";
})(ShipmentIdShipEnum = exports.ShipmentIdShipEnum || (exports.ShipmentIdShipEnum = {}));
/**
    * @export
    * @enum {string}
    */
var ShipmentHolderEnum;
(function (ShipmentHolderEnum) {
    ShipmentHolderEnum[ShipmentHolderEnum["NUMBER_1"] = 1] = "NUMBER_1";
    ShipmentHolderEnum[ShipmentHolderEnum["NUMBER_3"] = 3] = "NUMBER_3";
    ShipmentHolderEnum[ShipmentHolderEnum["NUMBER_4"] = 4] = "NUMBER_4";
})(ShipmentHolderEnum = exports.ShipmentHolderEnum || (exports.ShipmentHolderEnum = {}));
/**
    * @export
    * @enum {string}
    */
var TimelineItemIdEnum;
(function (TimelineItemIdEnum) {
    TimelineItemIdEnum[TimelineItemIdEnum["NUMBER_1"] = 1] = "NUMBER_1";
    TimelineItemIdEnum[TimelineItemIdEnum["NUMBER_2"] = 2] = "NUMBER_2";
    TimelineItemIdEnum[TimelineItemIdEnum["NUMBER_3"] = 3] = "NUMBER_3";
    TimelineItemIdEnum[TimelineItemIdEnum["NUMBER_4"] = 4] = "NUMBER_4";
    TimelineItemIdEnum[TimelineItemIdEnum["NUMBER_5"] = 5] = "NUMBER_5";
})(TimelineItemIdEnum = exports.TimelineItemIdEnum || (exports.TimelineItemIdEnum = {}));
/**
    * @export
    * @enum {string}
    */
var TimelineItemTypeEnum;
(function (TimelineItemTypeEnum) {
    TimelineItemTypeEnum[TimelineItemTypeEnum["NUMBER_1"] = 1] = "NUMBER_1";
    TimelineItemTypeEnum[TimelineItemTypeEnum["NUMBER_0"] = 0] = "NUMBER_0";
    TimelineItemTypeEnum[TimelineItemTypeEnum["NUMBER_MINUS_1"] = -1] = "NUMBER_MINUS_1";
})(TimelineItemTypeEnum = exports.TimelineItemTypeEnum || (exports.TimelineItemTypeEnum = {}));
/**
 * SuiviApi - axios parameter creator
 * @export
 */
exports.SuiviApiAxiosParamCreator = function (configuration) {
    return {
        /**
         * All connected applications use this service to track. These calls represent nearly 95% of traffic
         * @summary Getting tracking informations for an object
         * @param {string} idship ID of object (1 to 10, comma separated)
         * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
         * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        get: (idship, lang, xForwardedFor, options = {}) => __awaiter(this, void 0, void 0, function* () {
            // verify required parameter 'idship' is not null or undefined
            common_1.assertParamExists('get', 'idship', idship);
            const localVarPath = `/idships/{idship}`
                .replace(`{${"idship"}}`, encodeURIComponent(String(idship)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);
            const localVarHeaderParameter = {};
            const localVarQueryParameter = {};
            // authentication OKAPIkey required
            yield common_1.setApiKeyToObject(localVarHeaderParameter, "X-Okapi-Key", configuration);
            if (lang !== undefined) {
                localVarQueryParameter['lang'] = lang;
            }
            if (xForwardedFor !== undefined && xForwardedFor !== null) {
                localVarHeaderParameter['X-Forwarded-For'] = String(xForwardedFor);
            }
            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
            return {
                url: common_1.toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        }),
        /**
         * Used by browsers to verify allowed methods, domain origin ...
         * @summary Used by browsers to check request
         * @param {string} idship ID of object (1 to 10, comma separated)
         * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
         * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        options: (idship, lang, xForwardedFor, options = {}) => __awaiter(this, void 0, void 0, function* () {
            // verify required parameter 'idship' is not null or undefined
            common_1.assertParamExists('options', 'idship', idship);
            const localVarPath = `/idships/{idship}`
                .replace(`{${"idship"}}`, encodeURIComponent(String(idship)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = Object.assign(Object.assign({ method: 'OPTIONS' }, baseOptions), options);
            const localVarHeaderParameter = {};
            const localVarQueryParameter = {};
            // authentication OKAPIkey required
            yield common_1.setApiKeyToObject(localVarHeaderParameter, "X-Okapi-Key", configuration);
            if (lang !== undefined) {
                localVarQueryParameter['lang'] = lang;
            }
            if (xForwardedFor !== undefined && xForwardedFor !== null) {
                localVarHeaderParameter['X-Forwarded-For'] = String(xForwardedFor);
            }
            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);
            return {
                url: common_1.toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        }),
    };
};
/**
 * SuiviApi - functional programming interface
 * @export
 */
exports.SuiviApiFp = function (configuration) {
    const localVarAxiosParamCreator = exports.SuiviApiAxiosParamCreator(configuration);
    return {
        /**
         * All connected applications use this service to track. These calls represent nearly 95% of traffic
         * @summary Getting tracking informations for an object
         * @param {string} idship ID of object (1 to 10, comma separated)
         * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
         * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        get(idship, lang, xForwardedFor, options) {
            return __awaiter(this, void 0, void 0, function* () {
                const localVarAxiosArgs = yield localVarAxiosParamCreator.get(idship, lang, xForwardedFor, options);
                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);
            });
        },
        /**
         * Used by browsers to verify allowed methods, domain origin ...
         * @summary Used by browsers to check request
         * @param {string} idship ID of object (1 to 10, comma separated)
         * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
         * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        options(idship, lang, xForwardedFor, options) {
            return __awaiter(this, void 0, void 0, function* () {
                const localVarAxiosArgs = yield localVarAxiosParamCreator.options(idship, lang, xForwardedFor, options);
                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);
            });
        },
    };
};
/**
 * SuiviApi - factory interface
 * @export
 */
exports.SuiviApiFactory = function (configuration, basePath, axios) {
    const localVarFp = exports.SuiviApiFp(configuration);
    return {
        /**
         * All connected applications use this service to track. These calls represent nearly 95% of traffic
         * @summary Getting tracking informations for an object
         * @param {string} idship ID of object (1 to 10, comma separated)
         * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
         * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        get(idship, lang, xForwardedFor, options) {
            return localVarFp.get(idship, lang, xForwardedFor, options).then((request) => request(axios, basePath));
        },
        /**
         * Used by browsers to verify allowed methods, domain origin ...
         * @summary Used by browsers to check request
         * @param {string} idship ID of object (1 to 10, comma separated)
         * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
         * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        options(idship, lang, xForwardedFor, options) {
            return localVarFp.options(idship, lang, xForwardedFor, options).then((request) => request(axios, basePath));
        },
    };
};
/**
 * SuiviApi - object-oriented interface
 * @export
 * @class SuiviApi
 * @extends {BaseAPI}
 */
class SuiviApi extends base_1.BaseAPI {
    /**
     * All connected applications use this service to track. These calls represent nearly 95% of traffic
     * @summary Getting tracking informations for an object
     * @param {string} idship ID of object (1 to 10, comma separated)
     * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
     * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuiviApi
     */
    get(idship, lang, xForwardedFor, options) {
        return exports.SuiviApiFp(this.configuration).get(idship, lang, xForwardedFor, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * Used by browsers to verify allowed methods, domain origin ...
     * @summary Used by browsers to check request
     * @param {string} idship ID of object (1 to 10, comma separated)
     * @param {string} [lang] Lang desired: fr_FR, en_GB, de_DE, es_ES, it_IT, nl_NL
     * @param {string} [xForwardedFor] Must contains customer\&#39;s IP
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuiviApi
     */
    options(idship, lang, xForwardedFor, options) {
        return exports.SuiviApiFp(this.configuration).options(idship, lang, xForwardedFor, options).then((request) => request(this.axios, this.basePath));
    }
}
exports.SuiviApi = SuiviApi;
